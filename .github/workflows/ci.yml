name: CI

on:
  pull_request:
  push:
    branches:
      - 'master'
    tags:
      - '*'

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout LiveSplit
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Fetch history
        run: git fetch --prune --unshallow --no-recurse-submodules

      - name: Checkout head_ref
        if: ${{ github.head_ref != '' }}
        run: git checkout -b ${{ github.head_ref }} || git checkout ${{ github.head_ref }}

      - name: Set up .NET environment
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'

      - name: Build LiveSplit
        run: >
          dotnet build
          -v m
          -c Release
          -p:DebugType=None
          .\LiveSplit.sln

      - name: Build UpdateManager.exe
        run: >
          dotnet build
          -v m
          -c UpdateManagerExe
          -p:DebugType=None
          .\src\UpdateManager\UpdateManager.csproj

      - name: Run tests
        run: >
          dotnet test
          -v m
          -c Release
          --no-restore --no-build
          .\LiveSplit.sln

      - name: Create a release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body: |
            Automated release for Transparent LiveSplit.
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Zip Transparent LiveSplit Build
        run: 7z a Transparent_LiveSplit_Build.zip .\bin\Release\*

      - name: Zip UpdateManager
        run: 7z a UpdateManager.zip .\bin\UpdateManagerExe\*

      - name: Upload Transparent LiveSplit build to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: Transparent_LiveSplit_Build.zip
          asset_name: Transparent_LiveSplit_Build.zip
          asset_content_type: application/zip

      - name: Upload UpdateManager.exe to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: UpdateManager.zip
          asset_name: UpdateManager.zip
          asset_content_type: application/octet-stream
